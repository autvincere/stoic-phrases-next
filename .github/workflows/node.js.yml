# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: stoic-phrases-next CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: test_user
          POSTGRES_PASSWORD: test_password
          POSTGRES_DB: test_db
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    strategy:
      matrix:
        node-version: [20.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
    - uses: actions/checkout@v4
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    - name: Muestra contenido del directorio
      run: ls -la
    - run: npm ci
    - run: npm run lint
    - run: npm run build
    - name: Configurar base de datos para pruebas
      run: npx ts-node --esm src/app/seed/setup-test-db.ts
      env:
        DB_USER: test_user
        DB_HOST: localhost
        DB_NAME: test_db
        DB_PASSWORD: test_password
        DB_PORT: 5432
        NODE_ENV: test
    - name: Start Next.js for integration tests
      run: npm run dev & sleep 15
      env:
        DB_USER: test_user
        DB_HOST: localhost
        DB_NAME: test_db
        DB_PASSWORD: test_password
        DB_PORT: 5432
        NODE_ENV: test
    - name: Run all tests
      run: npm test
      env:
        DB_USER: test_user
        DB_HOST: localhost
        DB_NAME: test_db
        DB_PASSWORD: test_password
        DB_PORT: 5432
        NODE_ENV: test